[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "agenticai-backend"
version = "4.0.0"
description = "AgenticAI V4 - Assistant Multi-Agents Local via Ollama"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "AgenticAI Team"}
]
keywords = ["ai", "agents", "llm", "ollama", "fastapi", "rag"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: FastAPI",
]

dependencies = [
    "fastapi>=0.110.0",
    "uvicorn[standard]>=0.27.0",
    "httpx>=0.28.0",
    "pydantic>=2.12.0",
    "pydantic-settings>=2.1.0",
    "python-dotenv>=1.0.0",
    "redis>=5.0.0",
    "asyncpg>=0.29.0",
    "qdrant-client>=1.14.0",
    "anyio>=4.0.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.13.0",
    "celery>=5.3.0",
    "pyyaml>=6.0.0",
    "python-multipart>=0.0.9",
    "opentelemetry-api>=1.24.0",
    "opentelemetry-sdk>=1.24.0",
    "opentelemetry-instrumentation-fastapi>=0.45b0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=5.0.0",
    "pytest-mock>=3.14.0",
    "ruff>=0.6.0",
    "mypy>=1.11.0",
    "black>=24.0.0",
    "isort>=5.13.0",
]

[project.urls]
Homepage = "https://github.com/agenticai/agenticai-v4"
Documentation = "https://github.com/agenticai/agenticai-v4/docs"
Repository = "https://github.com/agenticai/agenticai-v4"
Issues = "https://github.com/agenticai/agenticai-v4/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["*"]
exclude = ["tests*", ".venv*"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--tb=short",
    "--cov=backend",
    "--cov-report=term-missing",
    "--cov-report=html",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests",
    "slow: Slow tests",
]

[tool.ruff]
line-length = 100
target-version = "py311"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*.py" = ["B011"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 100
